{"version":3,"sources":["logo.svg","header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","classes","useStyles","useState","browserHeight","setBrowserHeight","updateDimensions","window","innerHeight","useEffect","addEventListener","className","header","style","headerTextMain","headerTextSub","showCursor","strings","typeSpeed","backSpeed","startDelay","backDelay","Fab","btn","size","textColor","makeStyles","theme","textAlign","alignItems","width","backgroundColor","display","flexDirection","justifyContent","position","bottom","spacing","fontWeight","textTransform","letterSpacing","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,I,6DCMA,SAASA,IAAU,IACxBC,EAAUC,IADa,EAIaC,qBAJb,mBAItBC,EAJsB,KAIPC,EAJO,KAM7B,SAASC,IACLD,EAAiBE,OAAOC,aAG5BC,qBAAU,WACNF,OAAOG,iBAAiB,SAAUJ,KAClCA,MACD,IAQH,OACI,sBAAKK,UAAWV,EAAQW,OAAQC,MAAO,CAAC,OAAUT,EAAgB,MAAlE,UACI,oBAAIO,UAAWV,EAAQa,eAAvB,uBACA,oBAAIH,UAAWV,EAAQc,cAAvB,oBACA,cAAC,IAAD,CAAQJ,UAAWV,EAAQc,cACvBC,YAAY,EACZC,QAZI,CAAC,kBAAmB,4BAA6B,kBAarDC,UAAW,IACXC,UAAW,GACXC,WAAY,IACZC,UAAW,MAEf,cAACC,EAAA,EAAD,CAAKX,UAAWV,EAAQsB,IAAKC,KAAK,QAAlC,SACI,cAAC,IAAD,SAMhB,IAAMC,EAAY,QAGZvB,EAAYwB,aAAW,SAACC,GAAD,MAAY,CACrCf,OAAQ,CACJgB,UAAW,SACXC,WAAY,SAEZC,MAAO,OACPC,gBARQ,QASRC,QAAS,OACTC,cAAe,SACfC,eAAgB,UAEpBX,IAAK,CACDY,SAAU,WACVC,OAAQT,EAAMU,QAAQ,IAE1BvB,eAAgB,CACZwB,WAAY,IACZC,cAAe,YACfC,cAAe,MACfC,MAAOhB,GAEXV,cAAe,CACXwB,cAAe,YACfC,cAAe,MACfC,MAAOhB,OC7DAiB,MARf,WACE,OACE,mCACE,cAAC1C,EAAD,OCKS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ecd16878.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport ITyped from 'react-ityped'\r\n\r\nexport default function Header() {\r\n    const classes = useStyles()\r\n    // const [scrollTo, setScrollTo] = useState()\r\n    \r\n    const [browserHeight, setBrowserHeight] = useState()\r\n\r\n    function updateDimensions() {\r\n        setBrowserHeight(window.innerHeight)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateDimensions(this));\r\n        updateDimensions()\r\n    }, [])\r\n\r\n    const strings = ['Product Manager', 'Freelance React Developer', 'Something Else']\r\n\r\n    // function handleScroll() {\r\n        // if you'd like, you can write a scrollTo function here\r\n    // }\r\n\r\n    return (\r\n        <div className={classes.header} style={{\"height\": browserHeight + 'px'}}>\r\n            <h3 className={classes.headerTextMain}>YOUR NAME</h3>\r\n            <h5 className={classes.headerTextSub}>I'm a </h5>\r\n            <ITyped className={classes.headerTextSub}\r\n                showCursor={false}\r\n                strings={strings}\r\n                typeSpeed={100}\r\n                backSpeed={50}\r\n                startDelay={100}\r\n                backDelay={1000}\r\n            />\r\n            <Fab className={classes.btn} size=\"small\">\r\n                <KeyboardArrowDownIcon />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst textColor = 'white'\r\nconst bgcolor = 'black'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        textAlign: \"center\",\r\n        alignItems: 'center',\r\n        // position: \"absolute\",\r\n        width: \"100%\",\r\n        backgroundColor: bgcolor,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n    },\r\n    btn: {\r\n        position: \"absolute\",\r\n        bottom: theme.spacing(5), // MAKE ThiS DYNAMIC \r\n    },\r\n    headerTextMain: {\r\n        fontWeight: 300,\r\n        textTransform: \"uppercase\",\r\n        letterSpacing: \"8px\",\r\n        color: textColor,\r\n    },\r\n    headerTextSub: {\r\n        textTransform: \"uppercase\",\r\n        letterSpacing: \"5px\",\r\n        color: textColor,\r\n    }\r\n\r\n  }));\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './header/Header'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}